openapi: 3.0.0
info:
  description: An api to collect .mp3 files generated from festival.
  version: "0.1.0"
  license:
    name: "GPL v3"
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  title: Jo's Festival Api
  contact:
    name: Josiah Bull
    email: josiah.bull7@gmail.com
components:
  schemas:
    PhrasePackage:
      type: object
      required:
        - word
      properties:
        word:
          type: string
          example: university
        lang:
          type: string
          description: Must be a 2-letter language code. https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes Note that only 'en' is supported presently.
          example: en
        speed:
          type: number
          description: A float between 0.5 and 3, values outside of these will be truncated.
          example: 0.7
    UserCredentials:
      type: object
      required:
        - usr
        - pwd
      properties:
        usr:
          type: string
          example: JoeBloggs123
        pwd:
          type: string
          example: hunter42
paths:
  /docs:
    get:
      summary: Load docs for all endpoints of this api.
      responses:
        '200':
          description: A webpage containing information about the api.
  /api/v1/convert:
    post:
      summary: Convert a phrase into a .wav or .mp3 file.
      parameters:
        - in: header
          name: Authorisation
          schema:
            type: string
      requestBody:
        description: Provide the phrase package you wish to convert.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhrasePackage'
        required: true
      responses:
        '200':
          description: Succesfully converted phrase package to the requested file type.
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        '400':
          description: Unable to parse provided phrase package.
          content:
            text/plain:
              schema:
                type: string
                example: "word contains invalid characters"
        '401':
          description: Not Authorised
          content:
            text/plain:
              schema:
                type: string
                example: Invalid Auth Token
        '429':
          description: Too many requests! You have reached the configured rate limit for your account. Please wait before making further requests.
          content:
            text/plain:
              schema:
                type: string
                example: Too many requests! You will be able to make another request in 568 seconds.
        '500':
          description: Panic! Something has gone horribly wrong on our end. Please open an issue at https://github.com/JosiahBull/festival-api.

  /api/v1/login:
    post:
      summary: Login to your account, and collect an access token in the form of a JWT.
      requestBody:
        description: Provide credentials to the api to login.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: User succesfully logged in. The returned JWT should be stored and sent with future requests.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Incorrect Password or Username.
          content:
            text/plain:
              schema:
                type: string
                example: Incorrect Password or Username
        '500':
          description: Panic! Something has gone horribly wrong on our end. Please open an issue at https://github.com/JosiahBull/festival-api.

  /api/v1/create:
    post:
      summary: Create a new account, for now this does not require anything special but may require a special token in the future.
      requestBody:
        description: Provide user credentials to the api to use to create the new account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '201':
          description: User account created, and automatically logged in. The returned JWT should be stored and sent with future requests.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Unable to create user due to bad request. This could be becuase of password requirements not being met, or the username being taken.
          content:
            text/plain:
              schema:
                type: string
                example: Password Too Short
        '500':
          description: Panic! Something has gone horribly wrong on our end. Please open an issue at https://github.com/JosiahBull/festival-api.


